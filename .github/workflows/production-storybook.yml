name: üöÄ Storybook Production Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

env:
  FORCE_COLOR: 3
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Lint
        run: pnpm lint && pnpm lint:ws

  format:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Format
        run: pnpm format

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: Setup
        uses: ./tooling/github/setup

      - name: Typecheck
        run: pnpm typecheck

  changed-files:
    runs-on: ubuntu-latest
    name: changed-files
    outputs:
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            apps/storybook/**
            packages/ui/**

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          ANY_CHANGED: ${{ steps.changed-files.outputs.any_changed }}
        run: |
          if [ "$ANY_CHANGED" = "true" ]; then
            echo "Changed files detected:"
            echo "$ALL_CHANGED_FILES" | tr ' ' '\n' | while read -r file; do
              if [ -n "$file" ]; then
                echo "‚Üí $file"
              fi
            done
          else
            echo "No files were changed"
          fi

  chromatic:
    name: Deploy to Chromatic
    needs: [lint, format, typecheck, changed-files]
    if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./tooling/github/setup

      - name: Build Storybook
        run: pnpm run build:sb

      - name: ‚ö° Run chromatic
        uses: chromaui/action@latest
        # Chromatic GitHub Action options
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/storybook
          storybookBuildDir: storybook-static
          exitZeroOnChanges: true
          exitOnceUploaded: true
          onlyChanged: true
          externals: packages/(ui/src)/**
          skip: "@(renovate/**|dependabot/**)"
          buildScriptName: build

  deploy-sb-production:
    name: Deploy Storybook Production
    needs: [lint, format, typecheck, changed-files]
    if: ${{ needs.changed-files.outputs.any_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup
        uses: ./tooling/github/setup

      - name: Install Vercel CLI
        run: pnpm install --global vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.TURBO_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.TURBO_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prod --prebuilt --token=${{ secrets.TURBO_TOKEN }}
